#!/bin/bash
#
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Creates needed certificate and tls secrets
/bin/bash ${DIR}/../scripts/create-karydia-certificate
/bin/bash ${DIR}/../scripts/create-karydia-tls-secret
echo "Created certificate and TLS secrets."

sleep 1

# Create configmap for the default network policy
kubectl create configmap -n kube-system karydia-default-network-policy --from-literal policy="$(<${DIR}/../manifests/example-default-network-policy.yml)"
echo "Created configmap for default network polcy"

sleep 1

# Write CA bundle into values.yml so it can be later used by the webhook
ca_bundle="$(kubectl get configmap -n kube-system extension-apiserver-authentication -o=jsonpath='{.data.client-ca-file}' | base64 | tr -d '\r\n')"
if [[ -z "${ca_bundle}" ]]; then
  echo "ERROR: extension-apiserver-authentication config map with CA bundle not found - aborting" >&2
  exit 1
fi

echo "${ca_bundle}"

printf "%s\n" "caBundle: |" "  ${ca_bundle}" >${DIR}/charts/values.yaml
echo "Wrote CA bundle into values.yml"

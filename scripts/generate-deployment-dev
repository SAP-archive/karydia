#!/bin/bash
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

# Setup
PROD_YAML='manifests/deployment.yml'
DEV_YAML='manifests/deployment-dev.yml'
PROD_IMAGE="$1"
DEV_IMAGE="$2"
ERR_PREFIX='ERROR'

# Check
[ -z "$PROD_IMAGE" ] || [ -z "$DEV_IMAGE" ] && \
  echo "$ERR_PREFIX Usage: $(basename $0) PROD_DOCKER_IMAGE DEV_DOCKER_IMAGE" >&2 && \
  exit 1
#[[ "$OSTYPE" != 'darwin'* ]] && \
#  echo "$ERR_PREFIX OS not supported" >&2 && \
#  exit 1
! type 'yq' &> /dev/null && \
  echo "$ERR_PREFIX command not found: yq (https://github.com/mikefarah/yq)" >&2 && \
  exit 1

# Generate
cp -f "$PROD_YAML" "$DEV_YAML"
for ((i=0;;i++))
do
  image=$(yq r "$DEV_YAML" "spec.template.spec.containers.$i.image")
  [ "$image" == 'null' ] && break
  if [[ "$image" == "$PROD_IMAGE"* ]]
  then
    yq w -i "$DEV_YAML" "spec.template.spec.containers.$i.image" -- "$DEV_IMAGE"
    cmd=$(yq r "$DEV_YAML" "spec.template.spec.containers.$i.command")
    yq d -i "$DEV_YAML" "spec.template.spec.containers.$i.command"
    yq w -i "$DEV_YAML" "spec.template.spec.containers.$i.command.0" -- "hotswap"
    size="$(cat <<EOF | wc -l
$cmd
EOF)"
    for ((j=0;j<$size;j++))
    do
      c="$(cat <<EOF | yq r - $j
$cmd
EOF)"
      [ "$c" == 'karydia' ] && c="/usr/local/bin/$c"
      yq w -i "$DEV_YAML" "spec.template.spec.containers.$i.command.$((j+1))" -- "$c"
    done
    yq d -i "$DEV_YAML" "spec.template.spec.containers.$i.livenessProbe"
  fi
done
echo "Successfully generated '$DEV_YAML'"

